name: CI-CD

on:
  push:
    branches: [ main ]
    paths:
      - 'front/**'
      - 'back/**'
      - '.github/workflows/cicd.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'back/**'
      - '.github/workflows/cicd.yml'
  workflow_dispatch: {}

env:
  IMAGE_FRONT: docker.io/${{ secrets.DOCKER_USER }}/archiweb-app-front
  IMAGE_BACK:  docker.io/${{ secrets.DOCKER_USER }}/archiweb-app-back

jobs:
  # --- CI: lint + tests (back) ---
  ci-back:
    name: CI (back)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: back/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test:ci
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules

  # --- CD: build + push images (front & back) ---
  cd-build-push:
    name: Build & Push Docker Images
    needs: [ci-back]          # attend que la CI back rÃ©ussisse
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  # ne push pas d'images sur PR
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # ---------- FRONT ----------
      - name: Docker meta (front)
        id: meta_front
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_FRONT }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.TAG }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_started_at }}

      - name: Build+Push front
        uses: docker/build-push-action@v6
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ steps.meta_front.outputs.tags }}
          labels: ${{ steps.meta_front.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_FRONT }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_FRONT }}:buildcache,mode=max

      # ---------- BACK ----------
      - name: Docker meta (back)
        id: meta_back
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_BACK }}
          tags: |
            type=raw,value=${{ steps.vars.outputs.TAG }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_started_at }}

      - name: Build+Push back
        uses: docker/build-push-action@v6
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ steps.meta_back.outputs.tags }}
          labels: ${{ steps.meta_back.outputs.labels }}
          cache-from: type=registry,ref=${{ env.IMAGE_BACK }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_BACK }}:buildcache,mode=max
